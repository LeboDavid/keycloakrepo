name: Keycloak Docker CI/CD

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number'
        required: true

env:
  DOCKER_HUB_REPO: ${{ secrets.DOCKER_DEV_USERNAME }}/keycloakrepo
  IMAGE_TAG: latest
  SSH_PRIVATE_KEY: ${{ secrets.SERVER_DEV_PRIVATEKEY }}
  shell: bash


jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_DEV_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ env.DOCKER_HUB_REPO }}:${{ env.IMAGE_TAG }}
          ${{ env.DOCKER_HUB_REPO }}:${{ github.event.inputs.version }}

    - name: Deploy containers
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_DEV_PRIVATEKEY }}
        script: |
          
                docker run -d --name postgres \
                -e POSTGRES_DB=${{ secrets.DB_DATABASE }} \
                -e POSTGRES_USER=${{ secrets.DB_USER }} \
                -e POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }} \
                -v keycloak-postgres-data:/var/lib/postgresql/data \
                --network keycloak-network \
                 postgres:13

                  # Start Keycloak container
                  docker stop keycloak || true
                  docker rm keycloak || true
                  docker run -d --name keycloak \
                  --network keycloak-network \
                  -p 8081:8080 \
                  -e KEYCLOAK_ADMIN=${{ secrets.KEYCLOAK_ADMIN_USER }} \
                  -e KEYCLOAK_ADMIN_PASSWORD=${{ secrets.KEYCLOAK_ADMIN_PASSWORD }} \
                  -e KC_DB=postgres \
                  -e KC_DB_URL=jdbc:postgresql://postgres:5432/${{ secrets.DB_DATABASE }} \
                  -e KC_DB_USERNAME=${{ secrets.DB_USER }} \
                  -e KC_DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
                   ${{ env.DOCKER_HUB_REPO }}:${{ env.IMAGE_TAG }}
    - name: Setup SSH key
      run: |
            mkdir -p ~/.ssh
            echo "$SSH_PRIVATE_KEY" > ~/.ssh/server_key
            chmod 600 ~/.ssh/server_key
 
          
    - name: Wait for Keycloak to be ready
      run: |
          for i in {1..60}; do
          if curl -sSf "http://${{ secrets.SERVER_HOST }}:8081/health/ready"; then
          echo "Keycloak is up"
          exit 0
          fi
          echo "Waiting for Keycloak... ($i/60)"
          ssh -o StrictHostKeyChecking=no \
          -i ~/.ssh/server_key \
           ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} \
           "docker logs keycloak --tail 50 2>/dev/null || true"
           sleep 10
            done
           echo "Keycloak failed to start within timeout"
           exit 1
 

    - name: Configure Keycloak realms and clients
      uses: carlosthe19916/keycloak-action@0.7
      with:
        server: http://${{ secrets.SERVER_HOST }}:8081
        username: ${{ secrets.KEYCLOAK_ADMIN_USER }}
        password: ${{ secrets.KEYCLOAK_ADMIN_PASSWORD }}
        kcadm: |
          create realms -f ./keycloak/realm.json
          create clients -r DoosyFramework -f ./keycloak/client.json
